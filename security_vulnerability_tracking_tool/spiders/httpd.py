import scrapy
import pandas as pd
from pandas import ExcelWriter

class HttpdSpider(scrapy.Spider):
    name = 'Httpd'
    allowed_domains = ['httpd.apache.org']
    start_urls = ['https://httpd.apache.org/security/vulnerabilities_24.html']
    #CVE_REGEX = re.compile(r'CVE-\d{4}-\d{4,}')
    #VERSION_REGEX = re.compile(r'(\d\d?\.\d\.\d\d?)')

    def parse(self, response):
        impact_Rating= response.xpath('//dt/h3/text()').re('^[lmin]')
        #impact_Rating=response.xpath('//dt/h3/text()').re("(l)?'low'|(i)?important|(m)?moderate")
        advisory=response.xpath('//name/text()').extract()
        cve_Id  =response.xpath('//h3/a/text()').extract()
        #link_mitre     =response.xpath('//h3/a/@href').extract()
        #description    =response.xpath('//dl/dd/p[2]/text()').extract()
        #acknowledgements=
        #reported_To_Security_Team_On = response.xpath('//tr[1]/td[2]//text()').extract()
        #issue_Public = response.xpath('//tr[2]/td[2]//text()').extract()
        #update_Released = response.xpath('//tr[3]/td[2]//text()').extract()

        versions_Affected=response.xpath('//tr/td[contains(text(), "2.")]/text()').extract()
        #response.xpath('//table/tbody/tr/td[@class="cve-header" and text()="Affects"]').extract()
        #response.xpath('//table/tbody/tr/td[count(//table/thead/tr/th[//table/tbody/tr/td[@class="cve-header" and text()="Affects"]]/preceding-sibling::th)+2]')
        # Code to check new cve from list
        #yield{ {'impact_Rating':impact_Rating[0],'Advisory':advisory[0],"CVE-Id":cve_Id[0] ,"httpd_Versions_Affected":httpd_Versions_Affected[0]
        #          }

        # Code for all cves
        modified_Impact_name=[]
        for item in impact_Rating:
            if item == 'l':
                item = 'low'
            if item == 'i':
                item = 'important'
            if item == 'm':
                item = 'moderate'
            if item == 'n':
                item = 'n/a'
            modified_Impact_name.append(item)
        impact_Rating=modified_Impact_name

        try:
            data = {'impact_Rating':impact_Rating,'Advisory':advisory,"CVE-Id":cve_Id ,"versions_Affected":versions_Affected
                     }
            df = pd.DataFrame(data,columns=['impact_Rating',"CVE-Id",'Advisory',
                    "versions_Affected"])
            writer = ExcelWriter("httpd"+".xlsx")
            print(writer)
            df.to_excel(writer,'CVE Details',index=False)
            writer.save()

        except Exception as e:
            print("type error: " + str(e))

        pass
