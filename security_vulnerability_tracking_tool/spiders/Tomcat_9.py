# -*- coding: utf-8 -*-
import scrapy
import pandas as pd
from pandas import ExcelWriter


class Tomcat9Spider(scrapy.Spider):
    name = 'Tomcat_9'
    allowed_domains = ['tomcat.apache.org/security-9.html']
    start_urls = ['https://tomcat.apache.org/security-9.html']

    def parse(self, response):
        impact_Rating = response.xpath('//*[@id="content"]/div/p/strong/text()').re('^[LIM]')
        advisory = response.xpath('//*[@id="content"]/div/p/a/preceding-sibling::strong/text()').extract()
        #remove lw or high from front
        cve_Id  = response.xpath('//div/p/strong/following-sibling::a/text()').extract()
        hedder = response.xpath('//div/h3/@id').extract()
        affected   = []
        i = 2
        for x in range(len(hedder)-2):
            #//*[@id="Fixed_in_Apache_Tomcat_9.0.5"]/following-sibling::div[1]/p[contains(text(),"Affects")]
            # cveid_numof = //*[@id="Fixed_in_Apache_Tomcat_9.0.5"]/following-sibling::div[1]/p/strong/following-sibling::a/text()
            cve_path  ='(//*[@id="'
            a_path    ='(//*[@id="'
            cve_path+=hedder[i]
            a_path+=hedder[i]
            a_path+='"]/following-sibling::div[1]/p[contains(text(),"Affect")]/text())'
            cve_path+='"]/following-sibling::div[1]/p/strong/following-sibling::a/text())'
            a_path  = response.xpath(a_path).extract()
            cve_path= response.xpath(cve_path).extract()
            if len(a_path)==len(cve_path):
                for j in range(len(a_path)):
                    affected.append(a_path[j])
            else:
                affected.append("null")
            i+=1


        modified_Impact_name=[]
        for item in impact_Rating:
            if item == 'L':
                item = 'low'
            if item == 'I':
                item = 'important'
            if item == 'M':
                item = 'moderate'
            if item == 'C':
                item = 'critical'
            if item == 'n':
                item = 'n/a'
            modified_Impact_name.append(item)
        impact_Rating = modified_Impact_name
        try:
            data = {'impact_Rating':impact_Rating,'Advisory':advisory,"CVE-Id":cve_Id ,"versions_Affected":affected
                     }
            df = pd.DataFrame(data,columns=['impact_Rating','CVE-Id','Advisory','versions_Affected'])
            writer = ExcelWriter("Tomcart_9"+".xlsx")
            print(writer)
            df.to_excel(writer,'CVE Details',index=False)
            writer.save()

        except Exception as e:
            print("type error: " + str(e))

        pass
